/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export default {
  route: {
    dashboard: '仪表盘',
    introduction: '介绍',
    documentation: '文档',
    guide: '指南',
    permission: '许可证',
    pagePermission: '页面许可',
    directivePermission: '指示许可',
    icons: '图标',
    components: '组件',
    componentIndex: '组件介绍',
    tinymce: 'Tinymce',
    markdown: 'Markdown',
    jsonEditor: 'JSON Editor',
    dndList: 'Dnd List',
    splitPane: 'SplitPane',
    avatarUpload: 'Avatar 上传',
    dropzone: 'Dropzone',
    sticky: 'Sticky',
    countTo: 'CountTo',
    componentMixin: 'Mixin',
    backToTop: '回到顶部',
    dragDialog: '拖拽对话框',
    dragSelect: '拖拽选择',
    dragKanban: '拖拽看板',
    charts: '图表',
    keyboardChart: 'Keyboard Chart',
    lineChart: '线性图',
    mixChart: '混合图',
    example: '示例',
    nested: 'Nested Routes',
    menu1: '菜单 1',
    'menu1-1': '菜单 1-1',
    'menu1-2': '菜单 1-2',
    'menu1-2-1': '菜单 1-2-1',
    'menu1-2-2': '菜单 1-2-2',
    'menu1-3': '菜单 1-3',
    menu2: '菜单 2',
    Table: '表',
    dynamicTable: '动态表',
    dragTable: '拖拽表',
    inlineEditTable: '在线编辑',
    complexTable: '复杂表',
    treeTable: '树形表',
    customTreeTable: '自定义树形表',
    tab: '标签',
    form: '表单',
    createArticle: '创建文章',
    editArticle: '编辑文章',
    articleList: '文章列表',
    errorPages: '错误页面',
    page401: '401',
    page404: '404',
    errorLog: '错误日志',
    excel: 'Excel',
    exportExcel: '导出 Excel',
    selectExcel: '导出选中项',
    uploadExcel: '上传 Excel',
    zip: 'Zip',
    exportZip: '导出 Zip',
    theme: '主题',
    clipboardDemo: '剪贴板',
    i18n: 'I18n',
    externalLink: '外部链接'
  },
  navbar: {
    logOut: '登出',
    dashboard: '仪表盘',
    github: 'Pulsar Github地址',
    screenfull: '全屏',
    theme: '主题',
    size: '全局大小'
  },
  login: {
    title: '请登录',
    logIn: '点击登录',
    username: '用户名',
    password: '密码',
    any: '任何',
    thirdparty: '第三方',
    thirdpartyTips: '不建议在本地进行模拟，敬请结合实际业务进行模拟! ! !'
  },
  sidebar: {
    clusters: '集群',
    clusterInfo: '集群详情',
    tenants: '租户',
    namespaces: '命名空间',
    topics: '主题'
  },
  documentation: {
    documentation: '文档',
    github: 'Github Repository'
  },
  permission: {
    roles: '角色',
    switchRoles: '选择角色'
  },
  guide: {
    description: '指南页对一些第一次进入项目的人很有用。你可以简要地介绍项目的特点。',
    button: '展示指南'
  },
  components: {
    documentation: '文档',
    tinymceTips: '富文本编辑器是管理系统的一个核心部分，但同时也是一个有很多问题的地方。在选择富文本的过程中，我也走了不少弯路。市场上常见的富文本编辑器基本都用过，最后选择了 Tinymce 。更详细的富文本编辑器的比较和介绍请见文档。',
    dropzoneTips: '因为我的业务有特殊的需求，必须把图片上传到qiniu，所以我没有选择第三方，而是选择自己封装。它非常简单，你可以在@/components/Dropzone看到详细的代码。',
    stickyTips: '当页面滚动到预设位置时，将会停在此处。',
    backToTopTips1: '当页面被滚动到指定位置时，右下角会出现 "返回顶部 "按钮。',
    backToTopTips2: '你可以自定义按钮的样式，显示/隐藏，外观高度，返回高度。如果你需要一个文本提示，你可以在外部使用 element-ui el-tooltip 元素。',
    imageUploadTips: '因为我只用了 vue@1 的版本，而它目前与 mockjs 不兼容，所以我自己修改了它，如果你要用它，最好是用官方版本。'
  },
  table: {
    dynamicTips1: '固定页眉，按照页眉顺序排序。',
    dynamicTips2: '不固定的标题，按照点击顺序排序',
    dragTips1: '默认顺序',
    dragTips2: '拖动后的顺序',
    title: '标题',
    importance: 'Imp',
    type: '类型',
    remark: '备注',
    search: '查找',
    add: '添加',
    export: '导出',
    reviewer: 'reviewer',
    id: 'ID',
    date: 'Date',
    author: 'Author',
    readings: 'Readings',
    status: 'Status',
    actions: '操作',
    edit: '更新',
    publish: 'Publish',
    draft: '草稿',
    delete: '删除',
    cancel: '返回',
    confirm: '确认',
    name: 'Name',
    serviceUrl: '服务地址',
    brokerServiceUrl: 'BrokerServiceUrl',
    tenant: '租户',
    namespace: '命名空间',
    role: 'Role',
    clusters: '集群',
    addRole: '添加角色',
    addCluster: '添加集群',
    config: '配置',
    policies: '策略',
    description: '描述',
    update: '更新',
    topic: '主题',
    stats: 'Stats',
    partition: '分区',
    cluster: '集群',
    subscription: '订阅',
    unsubscription: '取消订阅',
    grant: '授权',
    limit: '限制',
    schemas: 'Schemas',
    brokers: 'Brokers',
    internalConfig: 'Internal 配置',
    runtimeConfig: 'Runtime 配置',
    dynamicConfig: 'Dynamic 配置',
    healthCheck: '健康检查',
    functions: 'functions',
    start: '开始',
    stop: '停止',
    restart: '重启',
    trigger: '触发器',
    configName: '配置名称',
    configValue: '配置值',
    sources: 'Sources',
    builtin: '内置的',
    sinks: 'Sink',
    quotas: '配额',
    monitor: '监控',
    allowedClusters: '允许的集群',
    adminRoles: 'Admin 角色'
  },
  errorLog: {
    tips: '请点击右上角的错误图标',
    description: '现在的管理系统基本上都是 spa 的形式，它增强了用户体验，但也增加了页面出现问题的可能性，一个小小的疏忽都可能导致整个页面的死锁。幸运的是Vue提供了一种捕捉处理异常的方法，在这里你可以处理错误或报告异常。',
    documentation: '文档介绍'
  },
  excel: {
    export: '导出',
    selectedExport: '导出选中',
    placeholder: '请在此输入文件名(默认是 excel-list)'
  },
  zip: {
    export: '导出',
    placeholder: '请在此输入文件名(默认是 file)'
  },
  theme: {
    change: '改变主题',
    documentation: '主题文档',
    tips: '提示: 与导航栏上的主题选择不同，是两种不同的换肤方法，各自有不同的应用场景。详细情况请参考文档。'
  },
  tagsView: {
    refresh: '刷新',
    close: '关闭',
    closeOthers: '关闭其他',
    closeAll: '关闭所有'
  },
  breadcrumb: {
    management: '管理',
    clusters: '集群',
    clusterInfo: '集群详情',
    brokers: 'Brokers',
    brokerInfo: 'Broker 详情',
    isolationPolicies: '隔离策略',
    isolationPolicyInfo: '隔离策略详情',
    failureDomains: '故障域',
    failureDomainInfo: '故障域详情',
    tenants: '租户',
    tenantInfo: '租户详情',
    namespaces: '命名空间',
    namespaceInfo: '命名空间详情',
    topics: '主题',
    topicInfo: '主题详情',
    subscriptions: '订阅',
    subscriptionInfo: '订阅详情'
  },
  tabs: {
    config: '配置',
    broker: 'BROKERS',
    bookie: 'BOOKIES',
    namespace: '命名空间',
    overview: '概述',
    topic: '主题',
    policies: '策略',
    configuration: '配置',
    failuredomains: '故障域',
    isolationpolicies: '隔离策略详情',
    storage: 'STORAGE'
  },
  role_actions: {
    consume: '消费者',
    produce: '生产者',
    functions: 'functions'
  },
  subscription_auth_mode: {
    none: 'None',
    prefix: 'Prefix'
  },
  backlog_policy: {
    consumer_backlog_eviction: '消费记录',
    producer_exception: '生产者异常情况',
    producer_request_hold: '生产者请求保留'
  },
  schema_bc: {
    full: '全程',
    forward: '前进',
    backward: '后退',
    always: '始终保持兼容',
    auto_update_disabled: '禁用自动更新',
    backward_transitive: '向后 transitive',
    forward_transitive: '向前 transitive',
    full_transitive: '全部 Transitive'
  },
  common: {
    dangerZone: '慎重操作',
    actions: 'Actions',
    clusterLabel: '集群',
    namespacesLabel: '命名空间',
    regex: 'Regex',
    inMsg: '输入速率',
    outMsg: '输出速率',
    inBytes: '输入吞吐',
    outBytes: '输出吞吐',
    storageSize: '存储大小',
    enabled: '已启用',
    disabled: '未启用'
  },
  tenant: {
    label: '租户',
    name: '租户',
    searchTenant: '查找租户',
    newTenant: '新建一个租户',
    deleteTenant: '删除租户',
    nameLabel: '租户名称',
    adminRolesLabel: '管理员角色',
    allowedClustersLabel: '集群标签',
    selectTenantMessage: '请选择租户',
    deleteTenantMessage: '确定要删除该租户吗？',
    tenantInfo: '租户详情',
    allowedClustersContent: '此租户被限制使用的集群列表。',
    adminRolesContent: '管理此租户认证角色的列表。',
    permissions: '许可协议',
    newRole: '添加新角色',
    tenantIsRequired: '租户名称为必填项',
    clusterIsRequired: '请为此租户选择可选集群。',
    createTenantSuccessNotification: '创建此租户成功。',
    deleteTenantSuccessNotification: '删除此租户成功。',
    roleAlreadyExists: '该角色已经存在。',
    updateRolesSuccessNotification: '更新此租户的角色信息成功。',
    updateClustersSuccessNotification: '更新此租户的集群成功。'
  },
  namespace: {
    label: '命名空间',
    name: '命名空间',
    namespaceNumber: '命名空间',
    newNamespace: '添加新的命名空间',
    deleteNamespace: '删除此命名空间',
    inputNamespaceMessage: '请在此处输入命名空间名称',
    newTopic: '添加新的主题',
    searchTopics: '查找主题',
    deleteNamespaceMessage: '确定要删除此命名空间吗？',
    namespaceNameIsRequired: '命名空间名称是必填的',
    createNsSuccessNotification: '成功创建此命名空间',
    deleteNsSuccessNotification: '成功删除此命名空间',
    searchNamespaces: '查找命名空间',
    policy: {
      label: '策略',
      name: '策略名称',
      cluster: '集群',
      replicatedCluster: '复制集群',
      replicatedClustersContent: '此命名空间的复制集群列表。' +
        ' 该命名空间的主题消息会以异步的方式在配置的复制集群间复制。',
      authorization: '授权',
      authorizationContent: '以下部分用于授予和撤销权限给该命名空间上的其他客户角色。',
      selectRole: '请选择角色',
      deleteRole: '删除角色',
      addRole: '添加角色',
      subscriptionAuthentication: '订阅授权',
      subscriptionAuthenticationMode: '订阅认证模式',
      subscriptionAuthenticationModeContent: '配置订阅认证模式，在启用认证时限制订阅的命名规则。',
      subscriptionAuthenticationModeOptions: '可用的选项: "None", "Prefix".',
      subscriptionAuthenticationModeNone: 'None: 每个客户端角色可以使用任何订阅名称进行连接。',
      subscriptionAuthenticaitonModePrefix: 'Prefix: 允许客户端使用以其角色名称为前缀的订阅名称来订阅。',
      subscriptionAuthenticaitonModePrefixExample: '例如, 如果一个客户被认证为 "example"，它只能使用以 ' +
        '"example "为前缀的订阅名称来订阅。其他的订阅' +
        '名称是不允许的',
      storage: '存储',
      replicationFactor: '复制因素',
      replicationFactorContent: '存储复制设置。',
      ensembleSizeDescription: ': 创建 ledger 时，要使用的 bookie 数量。',
      writeQuorumSizeDescription: ': 为每条消息存储的副本数量。',
      ackQuorumSizeDescription: ': 在消息保证被存储之前要等待的响应数量。',
      ensembleSize: '设置大小',
      inputEnsemble: '请在此处输入大小',
      writeQuorumSize: '写入 Quorum 大小',
      inputWriteQuorumSize: '请在此输入写入 Quorum 大小',
      readQuorumSize: 'Ack Quorum 大小',
      inputReadQuorumSize: '请在此处输入 Ack Quorum 大小',
      markDeleteRate: '标记-删除率',
      markDeleteRateContent: '允许每秒钟有多少次标记-删除调用的速率限制器。0表示禁用该速率限制器',
      inputDeleteMaxRate: '请在此处输入最大删除速率',
      encryptionRequire: '需要加密',
      encryptionRequireContent: '对命名空间进行消息加密。',
      deduplication: '重复数据删除',
      deduplicationContent: '启用或禁用命名空间的重复数据删除功能。',
      backlog: '积压文件',
      backlogQuotasLimit: '积压配额大小',
      backlogQuotasLimitContent: '命名空间允许的最大积压配额（以字节为单位）',
      inputBacklogQuotasLimit: '请在此处输入积压配额限制',
      backlogRententionPolicy: '积压的保留策略',
      backlogRententionPolicyContent: '在达到积压配额时执行的保留策略。',
      backlogRententionPolicyOptions: '有效的选项是:',
      producerRequestHoldDesc: 'producer_request_hold: 保留生产者发送的请求，直到资源变得可用（或保留时间结束）。',
      producerExceptionDesc: 'producer_exception: 拒绝生产者的发送请求。',
      consumerEvictionDesc: 'consumer_backlog_eviction: 从最慢的消费者的积压中清理最古老的信息。',
      inputBacklogRententionPolicyContent: '请选择积压的保留策略',
      schema: 'Schema',
      autoUpdateStrategy: '自动更新策略',
      autoUpdateStrategyContent: '适用于生产者自动更新新注册模式的策略。',
      schemaCompatibilityCheckStrategyLink: 'Schema 兼容性检查策略',
      inputAutoUpdateStrategy: '请选择积压文件的自动更新策略',
      schemaValidationEnforced: 'Schema 强制验证',
      schemaValidationEnforcedContent: '对没有 schema 的生产者强制执行 schema 验证。 如果禁用，没有 schema 的生产者将被禁止向有 schema 的主题发送消息。',
      cleanupPolicy: '清理策略',
      messageTTL: '消息 TTL (秒)',
      messageTTLContent: '设置消息的TTL（秒）。如果消息没有被订阅的任何消费者消费，在为该订阅配置的TTL期限之后，它们会被标记为 "已消费"。',
      inputMessageTTL: '请在此输入积压配额限制',
      retentionSize: '保留的大小 (megabytes)',
      retentionSizeContent: '保留的大小。只适用于消息被所有订阅者确认的情况。',
      inputRententionSize: '请在此输入要保留的大小',
      retentionTime: '保留期限 (分钟)',
      retentionTimeContent: '保留期。仅用于消息被所有订阅确认',
      inputRetentionTime: '请在此输入要保留的时间',
      compactionThreshold: '压缩阀值 (以字节为单位)',
      compactionThresholdContent: '当存储大小达到阈值时，压缩会自动触发。',
      inputCompactionThreshold: '请在此输入压缩阀值',
      offloadThreshold: '卸载阀值 (以字节为单位)',
      offloadThresholdContent: '当未卸载的信息的数据大小达到阈值时，消息会自动卸载到分层存储。',
      inputOffloadThreshold: '请在此输入卸载阀值',
      offloadDeletionLag: '卸载删除间隔（以毫秒为单位）',
      offloadDeletionLagContent: '在删除已从 BookKeeper 卸载的分类账之前要等待的毫秒数。负值表示删除功能已被完全禁用。',
      inputOffloadDeleteLag: '请在此输入卸载删除间隔',
      throttling: '节流',
      maxProducersPerTopic: '每个主题的最大生产者',
      maxProducersPerTopicContent: '每个主题允许的最大生产者数量。',
      inputMaxProducersPerTopic: '请在此输入最大的生产者',
      maxConsumersPerTopic: '每个主题的最大消费者',
      maxConsumersPerTopicContent: '每个主题允许的最大消费者数量。',
      inputMaxConsumersForTopic: '请在此输入主题的最大消费者数量',
      maxConsumerPerSubscription: '每个订阅的最大消费数',
      maxConsumerPerSubContent: '每个订阅允许的最大消费数',
      inputMaxConsumersForSub: '请在此输入每个订阅的最大消费数',
      dispatchRate: '分发速率',
      dispatchRatePerTopic: '每个主题的分发速率',
      dispatchRatePerTopicContent: '在每个主题的基础上节流分发速率。',
      dispatchRatePerTopicBytes: '吞吐量 (字节/秒)',
      inputDispatchRateBytes: '请在此输入分发速率',
      dispatchRatePerTopicMessage: '速率 (消息/秒)',
      inputDispatchRatePerTopicMessage: '请在此输入分发速率',
      dispatchRatePerTopicPeriod: '时间段 (秒)',
      inputDispatchPerTopicPerPeriod: '请在此输入分发速率',
      dispatchRateForSub: '每个订阅的分发速率',
      dispatchRatePerSubContent: '在每个订阅的基础上节流分发速率。',
      inputDispatchRatePerSubBytes: '请在此输入分发速率',
      dispatchRatePerSubBytes: '吞吐量 (字节/秒)',
      dispatchRatePerSubMessage: '速率 (消息/秒)',
      inputDispatchRatePerSubMessage: '请在此输入分发速率',
      dispatchRatePerSubPeriod: '时间段 (秒)',
      inputDispatchRatePerSubPeriod: '请在此输入分发速率',
      subscribeRatePerConsumer: '每个消费者的订阅速率',
      subscribeRatePerConsumerSub: '速度 (订阅/秒)',
      inputSubscribeRate: '请在此输入订阅速率',
      subscribeRatePerConsumerContent: '限制消费者尝试订阅主题的速率。',
      subscribeRatePerConsumerPeriod: '时间段 (秒)',
      antiAffinity: 'Anti-Affinity',
      antiAffinityGroup: 'Anti-Affinity 组',
      antiAffinityGroupContent: '在此命名空间配置 anti-affinity 组。',
      inputAntiAffinityGroup: '请在此输入 Anti Affinity 组',
      roleAlreadyExists: '该角色已经存在'
    },
    clearBacklog: 'Clear Backlog',
    bundle: {
      label: 'Bundle',
      name: 'Bundle 名称',
      operation: '操作',
      split: '切割',
      unload: '卸载',
      bundleInfoContent: '命名空间 bundles 是 Pulsar 中的分配和负载平衡的单元。',
      bundleInfoLink: '请参考 - Pulsar 负载平衡机制'
    },
    notification: {
      updatePersistenceSuccess: '更新此命名空间的持久化配置成功！',
      updateBacklogQuotaSuccess: '更新此命名空间的积压限额配置成功！',
      splitBundleSuccess: '成功为此命名空间拆分了一个 bundle！',
      unloadAllBundlesSuccess: '卸载此命名空间下的所有 bundle 成功！',
      unloadBundleSuccess: '卸载此命名空间的 bundle 成功！',
      clearBacklogSuccess: '清除此命名空间的积压文件成功！',
      clearBundleBacklogSuccess: '清除此命名空间的 bundle 积压文件成功!',
      updateReplicatedClustersSuccess: '更新此命名空间的复制集群成功！',
      updateSubscriptionAuthModeSuccess: '更新此命名空间的订阅认证模式成功！',
      addRoleSuccess: '添加命名空间角色成功！',
      addRoleActionsSuccess: '添加命名空间角色动作成功！',
      removeRoleSuccess: '成功从此命名空间中删除角色！',
      updateSchemaAutoUpdateStrategySuccess: '更改此命名空间的模式自动更新策略成功！',
      enableSchemaValidationEnforcedSuccess: '成功启用此命名空间的 Schema 验证！',
      disableSchemaValidationEnforcedSuccess: '成功禁用此命名空间的 Schema 验证',
      updateMessageTTLSuccess: '成功为此命名空间设置了消息 TTL ！',
      updateRetentionSuccess: '成功为此命名空间设置了消息保留策略！',
      updateCompactionThresholdSuccess: '成功为此命名空间设置压缩阀值！',
      updateOffloadThresholdSuccess: '成功为此命名空间设置了卸载阀值！',
      updateOffloadDeletionLagSuccess: '成功为此命名空间更新卸载删除间隔！',
      setMaxProducersSuccess: '成功为此命名空间设置了每个主题的最大生产者！',
      setMaxConsumersSuccess: '成功为此命名空间设置了每个主题的最大消费者！',
      setMaxConsumersPerSubscriptionSuccess: '成功为此命名空间设置了每个订阅的最大消费者！',
      setDispatchRateSuccess: '成功为此命名空间设置了每个主题的最大发送率！',
      setDispatchRatePerSubscriptionSuccess: '成功为此命名空间设置了每个订阅的最大发送率！',
      setSubscribeRateSuccess: '成功为此命名空间设置了每个主题的最大订阅率！',
      setAntiAffinityGroupSuccess: '成功为此命名空间设置了 anti-affinity 组！',
      enableEncryptionSuccess: '成功启用此命名空间的消息加密功能！',
      disableEncryptionSuccess: '成功禁用此命名空间的消息加密功能！',
      enableDeduplicationSuccess: '成功启用此命名空间的消息去重功能！',
      disableDeduplicationSuccess: '成功禁用此命名空间的消息去重功能！'
    }
  },
  topic: {
    label: '主题',
    name: '主题',
    topicName: '主题名称',
    topicNumber: '主题数',
    newTopic: '添加新主题',
    deleteTopic: '删除主题',
    delete: '删除',
    persistent: '持久化',
    nonPersistent: '非持久化',
    partition: '分区',
    partitions: '分区数',
    partitionNumber: '分区数',
    topicDomain: '域',
    addRole: '添加角色',
    producer: {
      label: '生产者',
      name: '生产者名称',
      producers: '生产者数',
      producerId: '生产者 Id',
      producerName: '生产者名称',
      producerNumber: '生产数',
      avgMsgSize: '平均消息大小',
      address: '地址',
      since: 'Since'
    },
    subscription: {
      label: '订阅',
      name: '订阅名称',
      subscriptions: '订阅数',
      type: '类型',
      subscriptionNumber: '订阅数',
      msgExpired: '过期的消息',
      backlog: '积压',
      skip: '调过',
      skipMessage: '调过的消息',
      expire: '过期',
      expireMessage: '超过时间戳的消息（以秒为单位）',
      expireTimePlaceholder: '消息过期时间',
      expireTimeRequired: '过期时间是必填项',
      clear: '清除',
      clearMessage: '清除消息',
      clearMessageConfirm: '确定清楚积压吗？',
      reset: '重置',
      resetByTime: '按时间重置',
      resetByTimeMessage: '按比时间戳大的时间重置（以分钟为单位）',
      resetByTimeRequired: '重置时间是必填项',
      resetById: '按消息 Id 重置',
      messageId: '消息 ID',
      mins: 'Mins',
      storage: '存储',
      storageSize: '存储大小',
      entries: 'Entries',
      segments: 'Segments',
      peek: 'PEEK',
      peekMessages: '消息',
      entryId: 'Entry Id',
      message: '消息',
      messageGreaterThanZero: '消息应该大于 0',
      peekMessageError: 'Peek 消息错误, 请检查',
      messageSkipSuccess: '跳过消息成功',
      expireMessageSuccess: '消息过期成功',
      clearMessageSuccess: '清除消息成功',
      minutesNotLessThanZero: '分钟数不能小于 0 ',
      resetCursorSuccess: '重置游标成功',
      messageIdNotLessThanZero: '消息 Id 不能小于 0',
      newSub: '新的订阅',
      sub: '已订阅',
      unsub: '未订阅',
      subNotification: '请输入正确的子名称',
      createSubSuccess: '创建订阅成功',
      deleteSubSuccess: '删除订阅成功',
      deleteSubConfirm: '确定要删除此订阅吗？'
    },
    segment: {
      label: '分片',
      name: '分片名称',
      ledgerId: 'Ledger Id',
      entries: 'Entries',
      size: '大小',
      status: '状态',
      offload: '卸载'
    },
    cursor: {
      label: '游标',
      name: '游标名称',
      cursors: '游标数',
      markDeletePosition: '标记删除位置',
      readPosition: '读位置',
      waitingReadOp: '等待 Read Op',
      pendingReadOp: '待定 Read Op',
      numberOfEntriesSinceFirstNotAckedMessage: '自第一次未接收消息的 entry 数'
    },
    policy: {
      label: '策略',
      name: '策略名称',
      policies: '策略',
      authentication: '认证',
      authorizationContent: '授予和撤销客户角色在主题上的权限。'
    },
    consumer: {
      label: '消费者',
      name: '消费者名称',
      consumers: '消费数',
      avgMsgSize: '平均消息量',
      address: '地址',
      since: 'Since'
    },
    notification: {
      createTopicSuccess: '创建主题成功！',
      deleteTopicSuccess: '删除主题成功！',
      deletePartitionedTopicSuccess: '删除分区主题成功！',
      unloadTopicSuccess: '卸载主题成功！',
      terminateTopicSuccess: '终止主题成功！',
      startCompactionSuccess: '开始压缩主题成功！',
      startOffloadSuccess: '开始卸载主题成功！',
      expireMessageSuccess: '成功过期的消息主题！'
    },
    errorLog: {
      noOffloadData: '无可卸载的！',
      invalidSizeStr: '无效大小的字符串 (e.g 200K 50M 1G)'
    },
    info: 'INFO',
    column: 'column',
    data: 'data',
    terminate: 'Terminate',
    compactionName: 'COMPACTION',
    compaction: '压缩',
    offloadName: '卸载',
    offload: '卸载',
    status: '状态',
    unload: '卸载',
    deleteTopicMessage: '确定要删除此 topic 吗？',
    partitionedTopicName: '分区主题名称',
    selectRoleMessage: '请在此选择角色',
    backlogOpeartion: '积压文件操作',
    autoRefresh: '自动刷新'
  },
  cluster: {
    label: '集群',
    name: '集群名称',
    addCluster: '添加集群',
    updateCluster: '更新集群',
    deleteCluster: '删除集群',
    searchClusters: '查找集群信息',
    selectCluster: '请选择集群',
    serviceUrl: '服务地址',
    selectClusterMessage: '请选择集群',
    webServiceUrlPrefix: '服务端地址（HTTP）',
    webServiceUrlTlsPrefix: '服务端地址（HTTPS）',
    brokerServiceUrlPrefix: 'Broker 服务地址',
    brokerServiceUrlTlsPrefix: 'Broker 服务地址 (TLS)',
    deleteClusterMessage: '确定要删除此集群吗？',
    replicatedCluster: '复制集群',
    addClusterSuccessNotification: '成功添加此集群',
    deleteClusterSuccessNotification: '成功删除此集群',
    clusterNameIsRequired: '集群名称是必填的',
    serviceUrlIsRequired: '服务端地址是必填的',
    bookieUrlIsRequired: 'Bookie 地址是必填的',
    deleteClusterDialogCaption: '删除集群',
    updateClusterSuccessNotification: '成功更新此集群'
  },
  broker: {
    label: 'Broker',
    name: 'Broker',
    brokerNumber: 'Brokers',
    ownedNamespaceNumber: '拥有的命名空间',
    throughput: '吞吐 (bytes/s)',
    msgRate: '消息速率 (msgs/s)',
    placeholderSelectBroker: '请选择 broker',
    brokerContent: '属于该故障域的 broker 列表。'
  },
  bookie: {
    label: 'Bookie',
    name: '名称',
    state: '状态',
    storage: '存储'
  },
  // failure domain
  fd: {
    label: '故障域',
    failureDomainNumber: '故障域',
    createFdTitle: '添加一个新的故障域',
    name: '故障域名称',
    brokerList: 'Broker 列表',
    selectBrokers: '请选择 broker',
    searchFds: '查找故障域',
    newFd: '点击添加新的故障域',
    updateFd: '更新故障域',
    deleteFd: '删除故障域',
    deleteFdMessage: '确定删除此故障域吗？',
    domainNameIsRequired: '故障域的名称是必填的',
    deleteDomainDialogCaption: '删除故障域',
    createFdSuccessNotification: '成功创建此故障域',
    deleteFdSuccessNotification: '成功删除此故障域',
    updateFdSuccessNotification: '成功更新此故障域'
  },
  // isolation policies
  ip: {
    label: '策略',
    heading: '命名空间隔离策略',
    name: '策略名称',
    searchIps: '查找隔离策略',
    selectIp: '选择隔离策略',
    newIp: '新的隔离策略',
    nameLabel: '隔离策略',
    numPBLabel: '主 Brokers',
    numSBLabel: '次 Brokers',
    newIpName: '请在此输入策略名称',
    selectNsLabel: '选择命名空间',
    selectPbLabel: '选择 Brokers',
    selectSbLabel: '选择 Brokers',
    selectAfpPh: '请选择自动故障切换策略',
    pbHeading: '主 Brokers',
    sbHeading: ' Brokers',
    afpHeading: '自动故障切换策略',
    ptHeading: '策略类型',
    brokerUsageThresholdLabel: 'Broker 使用阀值',
    brokerUsageThresholdPh: '请在此处输入 Brokers 使用阀值',
    minimalAvailableBrokerLabel: '最小可用的 Brokers',
    minimalAvailableBrokerPh: '请在此处输入最小可用的 Brokers',
    deletePolicyMessage: '确定要删除此策略吗？',
    deletePolicyDialogCaption: '删除隔离策略',
    deletePolicySuccessNotification: '成功删除此隔离策略',
    policyNameCannotBeEmpty: '策略名称不能为空',
    regexCannotBeEmpty: '命名空间正则表达式不能为空',
    nsRegexAlreadyExists: '命名空间正则表达式已经存在',
    primaryBrokerRegexCannotBeEmpty: '主 broker 正则表达式不能为空',
    primaryBrokerRegexAlreadyExists: '主 broker 正则表达式已经存在',
    secondaryBrokerRegexCannotBeEmpty: '次 broker 正则表达式不能为空',
    secondaryBrokerRegexAlreadyExists: '次 broker 正则表达已经存在',
    numLimitShouldGreaterThan0: '最小的可用 Brokers 需要大于 0',
    usageThresholdShouldGreaterThan0: 'Broker 使用阀值需要大于 0',
    updatePolicySuccessNotification: '成功更新此隔离策略',
    namespaceDesc: '应用此隔离策略的命名空间的正则表达式。',
    primaryBrokerDesc: '应用此隔离策略的主 brokers 的正则表达式。',
    secondaryBrokerDesc: '应用该隔离策略的次 brokers 的正则表达式。',
    policyTypeDesc: '主 Brokers 和次 Brokers 自动故障切换配置的命名空间策略。',
    brokerUsageThresholdDesc: 'Broker 被标记为不可用自动故障切换的使用阀值。',
    minimalAvailableBrokerDesc: '触发自动故障切换的最小可用的 Brokers 数量。'
  },
  // environment
  env: {
    buttonNewEnv: '点击创建新环境',
    colHeadingEnv: '环境名称',
    colHeadingServiceUrl: '服务 URL',
    colHeadingBookieUrl: 'Bookie URL',
    newEnvDialogCaption: '新环境',
    newEnvNamePlaceHolder: '请在此处输入环境名称',
    newEnvNameLabel: '环境名称',
    newEnvServiceUrlPlaceHolder: '请在此处输入新环境的服务 url',
    newEnvBookieUrlPlaceHolder: '请在此处输入新环境的 bookie url',
    newEnvServiceUrlLabel: '服务 URL',
    newEnvBookieUrlLabel: 'Bookie URL',
    updateEnvDialogCaption: '更新环境连接信息',
    updateEnvNameLabel: '环境名称',
    updateEnvServiceUrlPlaceHolder: '请在此处输入更新后的环境名称',
    updateEnvBookieUrlPlaceHolder: '请在此处输入更新后的 bookie url',
    updateEnvServiceUrlLabel: '服务 URL',
    updateEnvBookieUrlLabel: 'Bookie URL',
    deleteEnvDialogCaption: '删除环境',
    deleteEnvDialogText: '确定要删除该环境吗？',
    envNameIsRequired: '环境名称是必填项',
    serviceUrlIsRequired: '服务 URL 是必填项',
    addEnvSuccessNotification: '添加环境成功',
    deleteEnvSuccessNotification: '删除环境成功',
    updateEnvSuccessNotification: '更新环境成功',
    manageEnvs: '管理环境'
  },
  token: {
    buttonNewToken: '点击添加新的令牌',
    colHeadingRole: '角色',
    colHeadingToken: '令牌',
    colHeadingDesc: '描述',
    newTokenRolePlaceholder: '请在此处输入角色名称',
    newTokenDialogCaption: '新的令牌',
    newTokenDescPlaceholder: '请在此处输入角色描述',
    newTokenRequiredMessage: '角色是必填项',
    addTokenSuccessNotification: '添加角色令牌成功',
    deleteTokenSuccessNotification: '删除角色令牌成功',
    updateTokenSucccessNotification: '更新角色令牌成功'
  },
  user: {
    buttonNewUser: '新增用户',
    colUserName: '用户的名称',
    colUserDesc: '用户的描述',
    colUserEmail: '用户的邮箱',
    colUserPhone: '用户的手机号',
    colUserLocation: '用户的所在地',
    colUserCompany: '用户的公司名',
    colUserPassword: '用户的密码',
    colUserPasswordRepeat: '重复用户密码',
    userNamePlaceHolder: '请在此处输入用户的名称',
    userDescPlaceHolder: '请在此处输入用户的描述',
    userEmailPlaceHolder: '请在此处输入用户的邮箱',
    userPhonePlaceHolder: '请在此处输入用户的手机号',
    userLocationPlaceHolder: '请在此处输入用户的所在地',
    userCompanyPlaceHolder: '请在此处输入用户的公司名',
    userPasswordPlaceHolder: '请在此处输入用户的密码',
    newUser: '新增用户',
    deleteUser: '删除用户',
    updateUser: '更新用户',
    userNameIsRequired: '用户名称不能为空',
    userEmailIsRequired: '邮箱不能为空',
    userPasswordIsRequired: '密码不能为空',
    passwordNotification: '密码不匹配',
    creatUserNotification: '创建用户成功',
    deleteUserNotification: '删除用户成功',
    updateUserNotification: '更新用户成功'
  },
  role: {
    roleAlreadyExists: '角色已经存在',
    buttonNewRole: '添加新角色',
    colRoleName: '角色名称',
    colRoleDesc: '角色描述',
    colResourceType: 'resource 类型',
    colResourceName: 'resource 名称',
    colResourceVerbs: 'resource  Verbs',
    colRoleSource: '角色来源',
    colResource: 'resource',
    roleNamePlaceHolder: '请在此处输入角色名称',
    roleDescPlaceHolder: '请在此处输入角色描述',
    resourceTypePlaceHolder: '请在此处输入 resource 类型',
    resourcePlaceHolder: '请在此处输入 resource ',
    resourceVerbsPlaceHolder: '请在此处输入角色 verbs',
    resourceDescPlaceHolder: '请在此处输入角色描述',
    newRole: '添加角色',
    deleteRole: '删除角色',
    updateRole: '更新角色',
    roleNameIsRequired: '角色名称不能为空',
    creatRoleNotification: '创建角色成功',
    deleteRoleNotification: '删除角色成功',
    updateRoleNotification: '更新角色成功'
  }
}
